/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import GUI from "lil-gui";
import { a, config, useSpring } from '@react-spring/three';

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/akabeko-draco.glb')
  const { actions, names } = useAnimations(animations, group)
  const [index, setIndex] = useState(0)
  const [bgColor, setBgColor] = useState("#ED7680")
  
  // 初回のあにめ
  const [first, setFirst] = useState(true)
  const [spring, api] = useSpring(() => ({
    position: [0, 12, -0.48],
  }))
  
  useEffect(() => {
    // configはここで設定
    api.start({
      position: [0, 1.37, -0.48],
      config: {duration: 2000},
      onRest: () => setTimeout(() => {setFirst(false)}, 500)
    })
  }, [])
  
  // GUI関連
  const obj = {
    "Reload": function() {location.reload()},
    "Background Color": bgColor,
    "Change Animation": function() {
      setIndex((index + 1) % names.length)
    },
    "Pause & Play": function() {
      const isPaused = actions[names[index]].paused
      isPaused ? (
        actions[names[index]].paused = false
        ) : (
          actions[names[index]].paused = true
      )
    }
  }
  
  // 各アニメーション再生
  useEffect(() => {
    if (!first) {
      actions[names[index]].reset().fadeIn(0.5).play()
      
      return () => actions[names[index]].fadeOut(1)
    }
  }, [actions, index, names, first])
  
  
  useEffect(() => {
    const gui =  new GUI()
    gui.add(obj, "Reload")
    
    const colorController = gui.addColor(obj, "Background Color")
    colorController.onChange(() => setBgColor(obj["Background Color"]))
    
    gui.add(obj, "Change Animation")
    gui.add(obj, "Pause & Play")
  }, [index])

  return (
    <>
      <color attach={"background"} args={[bgColor]} />

      <group ref={group} {...props} dispose={null}>
        <group name="Scene">
          <a.group name="アーマチュア" {...spring} rotation={[Math.PI, Math.PI / 2, 0]} scale={1.36}>
            <primitive object={nodes.Root} />
            <primitive object={nodes.Bone002R} />
            <primitive object={nodes.Bone002L} />
            <group name="main">
              <skinnedMesh castShadow receiveShadow name="立方体003" geometry={nodes.立方体003.geometry} material={materials.head} skeleton={nodes.立方体003.skeleton} />
              <skinnedMesh castShadow receiveShadow name="立方体003_1" geometry={nodes.立方体003_1.geometry} material={materials['body.001']} skeleton={nodes.立方体003_1.skeleton} />
            </group>
          </a.group>
        </group>
      </group>
    </>
  )
}

useGLTF.preload('/akabeko-draco.glb')
